 #Import necessary packages
import pandas as pd
import matplotlib.pyplot as plt

#Read the training data
train_data = pd.read_csv('salary_data_cleaned.csv')

#Print the data
train_data.head()

#Print the dimesnion of the data
train_data.shape

#separating X train and Y train
X_train = train_data[['age']]
Y_train = train_data[['max_salary']]

# importing train_test_split from sklearn
from sklearn.model_selection import train_test_split
# splitting the data
X_train, X_test, Y_train, Y_test = train_test_split(X_train, Y_train, test_size = 0.5, random_state = 0)

#print the shape of train and test data after spltting
print (X_train.shape)
print (Y_train.shape)
print (X_test.shape)
print (Y_test.shape)

#Load the model and fit
from sklearn import linear_model
fromâ€¦
[9:04 am, 10/01/2023] Shehaj Collage: import tensorflow as Tnr
#print the shape of train and test data after spltting
Model = Tnr.keras.Sequential([Tnr.keras.layers.Dense(20, activation = 'relu'),
Tnr.keras.layers.Dense(20, activation = 'relu'),
Tnr.keras.layers.Dense(1, activation = 'sigmoid')
])

Model.compile(optimizer=Tnr.keras.optimizers.Adam(learning_rate=0.01),
                 loss=Tnr.keras.losses.BinaryCrossentropy(),
                 metrics=['Accuracy'])
                 
""""This code initiate the training process and give us the accuracy"""
Model.evaluate(X_train,Y_train)

"""This will help improve the accuracy of the previous metrics"""
Model.fit(X_train, Y_train, batch_size=20, epochs=300, verbose=2, shuffle=True)
